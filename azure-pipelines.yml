trigger:
 -

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseNode@1
  inputs:
    version: '16.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install'

- script: |
    npm run build
  displayName: 'npm build'
- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: |
       src/*
       public/*
    targetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy project files'

- task: PublishPipelineArtifact@1
  inputs:
    artifactName: e2e-server
    targetPath: '$(Build.ArtifactStagingDirectory)'
    publishLocation: 'pipeline'
  displayName: 'Publish npm artifact'
- task: XplatGenerateReleaseNotes@4
  inputs:
    outputfile: '$(Build.ArtifactStagingDirectory)/releasenotes.md'
    outputVariableName: 'releasenotes'
    templateLocation: 'InLine'
    inlinetemplate: |
      # {{buildDetails.buildNumber}}
      {{buildDetails.startTime}}
      
      **Work Items**
      |Id|Type|Title|
      |-|-|-|
      {{#forEach this.workItems}}
      |{{this.id}}|{{lookup this.fields 'System.WorkItemType'}}|[{{lookup this.fields 'System.Title'}}]({{replace this.url "_apis/wit/workItems" "_workitems/edit"}})|
      {{/forEach}}
      
      **Pull Requests**
      {{#forEach pullRequests}}
      * [{{this.title}}]({{replace (replace this.url "_apis/git/repositories" "_git") "pullRequests" "pullRequest"}})
      {{/forEach}}
    checkStage: true
    dumpPayloadToConsole: false
    dumpPayloadToFile: false
    replaceFile: true
    getParentsAndChildren: false
    getAllParents: false
    getIndirectPullRequests: false
    stopOnError: false
    considerPartiallySuccessfulReleases: false
    checkForManuallyLinkedWI: false
    wiqlFromTarget: 'WorkItems'
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'releasenotes'
    publishLocation: 'Container'